<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NPushOver</name>
    </assembly>
    <members>
        <member name="T:NPushover.Converters.UnixDateTimeConverter">
            <summary>
            Handles explicitly the conversion of UNIX (Epoch) time to DateTime and vice versa.
            </summary>
            <remarks>
            Dates are specified in seconds from UNIX epoch. This converter helps to convert these values to DateTime
            objects with the Kind property explicitly set to Utc.
            </remarks>
        </member>
        <member name="M:NPushover.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:NPushover.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:NPushover.Converters.UnixDateTimeConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>True if this instance can convert the specified object type; otherwise, false.</returns>
        </member>
        <member name="T:NPushover.Converters.NullableUnixDateTimeConverter">
            <summary>
            Handles explicitly the conversion of UNIX (Epoch) time to nullable DateTime and vice versa.
            </summary>
            <remarks>
            Dates are specified in seconds from UNIX epoch. This converter helps to convert these values to DateTime 
            objects with the Kind property explicitly set to Utc.
            </remarks>
        </member>
        <member name="M:NPushover.Converters.NullableUnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:NPushover.Converters.NullableUnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:NPushover.Converters.NullableUnixDateTimeConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>True if this instance can convert the specified object type; otherwise, false.</returns>
        </member>
        <member name="T:NPushover.Converters.BoolConverter">
            <summary>
            Handles explicitly the conversion of integers to booleans and vice versa.
            </summary>
            <remarks>
            The values 0 or null are interpreted as false, anything other than those are interpreted as true.
            </remarks>
        </member>
        <member name="M:NPushover.Converters.BoolConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:NPushover.Converters.BoolConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:NPushover.Converters.BoolConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>True if this instance can convert the specified object type; otherwise, false.</returns>
        </member>
        <member name="T:NPushover.Converters.NullableBoolConverter">
            <summary>
            Handles explicitly the conversion of integers to nullable booleans and vice versa.
            </summary>
            <remarks>
            The value 0 is interpreted as false, null is interpreted as null; anything other than this is interpreted as true.
            </remarks>
        </member>
        <member name="M:NPushover.Converters.NullableBoolConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:NPushover.Converters.NullableBoolConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:NPushover.Converters.NullableBoolConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>True if this instance can convert the specified object type; otherwise, false.</returns>
        </member>
        <member name="T:NPushover.Exceptions.BadRequestException">
            <summary>
            Represents an error that occurs when pushover returned an HTTP status 400: bad request.
            </summary>
            <remarks>
            Exceptions of this type are typically caused by sending incorrect values or not sending all required values
            to the Pushover service.
            </remarks>
        </member>
        <member name="M:NPushover.Exceptions.BadRequestException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.Exceptions.BadRequestException"/> class with an empty (null) 
            <see cref="T:NPushover.ResponseObjects.PushoverResponse"/>.
            </summary>
        </member>
        <member name="M:NPushover.Exceptions.BadRequestException.#ctor(NPushover.ResponseObjects.PushoverResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.Exceptions.BadRequestException"/> class with a reference to the 
            <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> a that is the cause of this exception.
            </summary>
            <param name="response">The <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> that is the cause for the exception.</param>
        </member>
        <member name="M:NPushover.Exceptions.BadRequestException.#ctor(NPushover.ResponseObjects.PushoverResponse,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.Exceptions.BadRequestException"/> class with a reference to the 
            <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> and a reference to the inner exception that are the cause of this exception.
            </summary>
            <param name="response">The <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> that is the cause for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference if no inner exception.
            </param>
        </member>
        <member name="T:NPushover.Exceptions.RateLimitExceededException">
            <summary>
            Represents an error that occurs when the Pushover service returns a "rate limit exceeded" response.
            </summary>
            <remarks>
            Exceptions of this type are caused by the Pushover service.
            </remarks>
        </member>
        <member name="P:NPushover.Exceptions.RateLimitExceededException.RateLimitInfo">
            <summary>
            Returns <see cref="P:NPushover.Exceptions.RateLimitExceededException.RateLimitInfo"/> reported by the Pushover service containing information on why a request
            was ratelimited and when the ratelimit is reset.
            </summary>
        </member>
        <member name="M:NPushover.Exceptions.RateLimitExceededException.#ctor(NPushover.ResponseObjects.PushoverResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.Exceptions.RateLimitExceededException"/> class with a reference to the 
            <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> a that is the cause of this exception.
            </summary>
            <param name="response">The <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> that is the cause for the exception.</param>
        </member>
        <member name="M:NPushover.Exceptions.RateLimitExceededException.#ctor(NPushover.ResponseObjects.PushoverResponse,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.Exceptions.RateLimitExceededException"/> class with a reference to the 
            <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> and a reference to the inner exception that are the cause of this exception.
            </summary>
            <param name="response">The <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> that is the cause for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference if no inner exception.
            </param>
        </member>
        <member name="T:NPushover.Exceptions.InvalidKeyException">
            <summary>
            Represents an error that occurs when a key, id or token is determined to be invalid based on it's format.
            </summary>
        </member>
        <member name="P:NPushover.Exceptions.InvalidKeyException.Key">
            <summary>
            Gets the key, id or token that caused the current exception.
            </summary>
        </member>
        <member name="M:NPushover.Exceptions.InvalidKeyException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.Exceptions.InvalidKeyException"/> class with the name of the parameter and
            a reference to the key, id or token that is the cause of this exception.
            </summary>
            <param name="paramName">The name of the parameter that caused the current exception.</param>
            <param name="key">The key, id or token that is the cause of this exception.</param>
        </member>
        <member name="T:NPushover.Exceptions.PushoverException">
            <summary>
            Provides a baseclass for all exceptions thrown by NPushover.
            </summary>
        </member>
        <member name="M:NPushover.Exceptions.PushoverException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.Exceptions.PushoverException"/> class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:NPushover.Exceptions.PushoverException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.Exceptions.PushoverException"/> class with a specified error message and
            a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference if no inner exception.
            </param>
        </member>
        <member name="T:NPushover.Exceptions.ResponseException">
            <summary>
            Provides a baseclass for all exceptions encountered in Pushover responses to requests.
            </summary>
        </member>
        <member name="P:NPushover.Exceptions.ResponseException.Response">
            <summary>
            Gets the <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> that caused the exception.
            </summary>
        </member>
        <member name="M:NPushover.Exceptions.ResponseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.Exceptions.ResponseException"/> class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:NPushover.Exceptions.ResponseException.#ctor(System.String,NPushover.ResponseObjects.PushoverResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.Exceptions.ResponseException"/> class with a specified error message and
            a reference to the <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="response">The  <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> that is the cause for the exception.</param>
        </member>
        <member name="M:NPushover.Exceptions.ResponseException.#ctor(System.String,NPushover.ResponseObjects.PushoverResponse,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.Exceptions.ResponseException"/> class with a specified error message,
            a reference to the <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> and a reference to the inner exception that are the cause
            of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="response">The  <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> that is the cause for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference if no inner exception.
            </param>
        </member>
        <member name="T:NPushover.RequestObjects.Priority">
            <summary>
            Defines the available priorities for <see cref="T:NPushover.RequestObjects.Message"/>s.
            </summary>
        </member>
        <member name="F:NPushover.RequestObjects.Priority.Lowest">
            <summary>
            When the priority parameter is specified with this value, messages will be considered lowest priority and
            will not generate any notification. On iOS, the application badge number will be increased.
            </summary>
        </member>
        <member name="F:NPushover.RequestObjects.Priority.Low">
            <summary>
            Messages this priority will be considered low priority and will not generate any sound or vibration, but
            will still generate a popup/scrolling notification depending on the client operating system. Messages 
            delivered during a user's quiet hours are sent as though they had a priority of <see cref="F:NPushover.RequestObjects.Priority.Lowest"/>.
            </summary>
        </member>
        <member name="F:NPushover.RequestObjects.Priority.Normal">
            <summary>
            Messages sent with this priority will have the default priority. These messages trigger sound, vibration, 
            and display an alert according to the user's device settings. On iOS, the message will display at the top 
            of the screen or as a modal dialog, as well as in the notification center. On Android, the message will 
            scroll at the top of the screen and appear in the notification center. If a user has quiet hours set and 
            the message is received during those times, your message will be delivered as though it had a priority of
            </summary>
        </member>
        <member name="F:NPushover.RequestObjects.Priority.High">
            <summary>
            Messages sent with this priority are high priority messages that bypass a user's quiet hours. These
            messages will always play a sound and vibrate (if the user's device is configured to) regardless of the
            delivery time. High-priority should only be used when necessary and appropriate. High-priority messages are
            highlighted in red in the device clients.
            </summary>
        </member>
        <member name="F:NPushover.RequestObjects.Priority.Emergency">
            <summary>
            Emergency-priority notifications are similar to high-priority notifications, but they are repeated until
            the notification is acknowledged by the user. These are designed for dispatching and on-call situations
            where it is critical that a notification be repeatedly shown to the user (or all users of the group that
            the message was sent to) until it is acknowledged. Applications sending emergency notifications are issued
            a receipt that can be used to get the status of a notification and find out whether it was acknowledged, or
            automatically receive a callback when the user has acknowledged the notification. To send an 
            emergency-priority notification, the priority parameter must be set to this value and the 
            <see cref="P:NPushover.RequestObjects.Message.RetryOptions"/> must be supplied.
            </summary>
        </member>
        <member name="T:NPushover.RequestObjects.Sounds">
            <summary>
            Defines the available sounds (however, more sounds may become available; see <see cref="M:NPushover.Pushover.ListSoundsAsync"/>).
            </summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Pushover">
            <summary>Pushover (default)</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Bike">
            <summary>Bike</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Bugle">
            <summary>Bugle</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Cashregister">
            <summary>Cash register</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Classical">
            <summary>Classical</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Cosmic">
            <summary>Cosmic</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Falling">
            <summary>Falling</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Gamelan">
            <summary>Gamelan</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Incoming">
            <summary>Incoming</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Intermission">
            <summary>Intermission</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Magic">
            <summary>Magic</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Mechanical">
            <summary>Mechanical</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Pianobar">
            <summary>Piano bar</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Siren">
            <summary>Siren</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Spacealarm">
            <summary>Space alarm</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Tugboat">
            <summary>Tugboat</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Alien">
            <summary>Alien alarm (long)</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Climb">
            <summary>Climb (long)</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Persistent">
            <summary>Persistent (long)</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Echo">
            <summary>Pushover echo (long)</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.Updown">
            <summary>Up down (long)</summary>
        </member>
        <member name="F:NPushover.RequestObjects.Sounds.None">
            <summary>None (silent)</summary>
        </member>
        <member name="T:NPushover.RequestObjects.OS">
            <summary>
            Defines the available Operating System choices for licensing (see 
            <see cref="O:NPushover.Pushover.AssignLicenseAsync"/>).
            </summary>
        </member>
        <member name="F:NPushover.RequestObjects.OS.Any">
            <summary>Assign the license to the first operating system the user registers with</summary>
        </member>
        <member name="F:NPushover.RequestObjects.OS.Android">
            <summary>Android</summary>
        </member>
        <member name="F:NPushover.RequestObjects.OS.iOS">
            <summary>iOS</summary>
        </member>
        <member name="F:NPushover.RequestObjects.OS.Desktop">
            <summary>Desktop</summary>
        </member>
        <member name="T:NPushover.RequestObjects.AudioFormat">
            <summary>
            Defines the available audio formats for retrieval (see <see cref="O:NPushover.Pushover.DownloadSoundAsync"/>).
            </summary>
        </member>
        <member name="F:NPushover.RequestObjects.AudioFormat.Mp3">
            <summary>Mp3</summary>
        </member>
        <member name="F:NPushover.RequestObjects.AudioFormat.Wav">
            <summary>Wave</summary>
        </member>
        <member name="T:NPushover.RequestObjects.Message">
            <summary>
            Represents an Pushover message that can be sent using the <see cref="T:NPushover.Pushover"/> class.
            </summary>
        </member>
        <member name="M:NPushover.RequestObjects.Message.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.RequestObjects.Message"/> class with default <see cref="P:NPushover.RequestObjects.Message.Priority"/> and
            <see cref="P:NPushover.RequestObjects.Message.Sound"/>.
            </summary>
        </member>
        <member name="M:NPushover.RequestObjects.Message.#ctor(NPushover.RequestObjects.Sounds)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.RequestObjects.Message"/> class with default <see cref="P:NPushover.RequestObjects.Message.Priority"/> and with
            the specified <see cref="P:NPushover.RequestObjects.Message.Sound"/>.
            </summary>
            <param name="sound">The <see cref="P:NPushover.RequestObjects.Message.Sound"/> of the <see cref="T:NPushover.RequestObjects.Message"/>.</param>
        </member>
        <member name="M:NPushover.RequestObjects.Message.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.RequestObjects.Message"/> class with default <see cref="P:NPushover.RequestObjects.Message.Priority"/> and
            <see cref="P:NPushover.RequestObjects.Message.Sound"/> and with the specified <see cref="P:NPushover.RequestObjects.Message.Body"/>.
            </summary>
            <param name="body">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Body"/>.</param>
        </member>
        <member name="M:NPushover.RequestObjects.Message.#ctor(NPushover.RequestObjects.Priority,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.RequestObjects.Message"/> class with default <see cref="P:NPushover.RequestObjects.Message.Sound"/> and with the
            specified <see cref="P:NPushover.RequestObjects.Message.Priority"/> and <see cref="P:NPushover.RequestObjects.Message.Body"/>.
            </summary>
            <param name="priority">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Priority"/>.</param>
            <param name="body">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Body"/>.</param>
        </member>
        <member name="M:NPushover.RequestObjects.Message.#ctor(NPushover.RequestObjects.Priority,System.String,NPushover.RequestObjects.Sounds)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.RequestObjects.Message"/> class with the specified <see cref="P:NPushover.RequestObjects.Message.Priority"/>, 
            <see cref="P:NPushover.RequestObjects.Message.Body"/> and <see cref="P:NPushover.RequestObjects.Message.Sound"/>.
            </summary>
            <param name="priority">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Priority"/>.</param>
            <param name="body">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Body"/>.</param>
            <param name="sound">The <see cref="P:NPushover.RequestObjects.Message.Sound"/> of the <see cref="T:NPushover.RequestObjects.Message"/>.</param>
        </member>
        <member name="M:NPushover.RequestObjects.Message.#ctor(NPushover.RequestObjects.Priority,System.String,System.Boolean,NPushover.RequestObjects.Sounds)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.RequestObjects.Message"/> class with the specified <see cref="P:NPushover.RequestObjects.Message.Priority"/>, 
            <see cref="P:NPushover.RequestObjects.Message.Body"/> and <see cref="P:NPushover.RequestObjects.Message.Sound"/>.
            </summary>
            <param name="priority">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Priority"/>.</param>
            <param name="body">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Body"/>.</param>
            <param name="isHtmlBody">When the <see cref="P:NPushover.RequestObjects.Message.Body"/> contains HTML, set to true. False otherwise. See <see cref="P:NPushover.RequestObjects.Message.IsHtmlBody"/>.</param>
            <param name="sound">The <see cref="P:NPushover.RequestObjects.Message.Sound"/> of the <see cref="T:NPushover.RequestObjects.Message"/>.</param>
        </member>
        <member name="M:NPushover.RequestObjects.Message.#ctor(NPushover.RequestObjects.Priority,System.String,System.String,System.Boolean,NPushover.RequestObjects.Sounds)">
            <summary>
            Initializes a new instance of the <see cref="T:NPushover.RequestObjects.Message"/> class with the specified <see cref="P:NPushover.RequestObjects.Message.Priority"/>, 
            <see cref="P:NPushover.RequestObjects.Message.Title"/>, <see cref="P:NPushover.RequestObjects.Message.Body"/> and <see cref="P:NPushover.RequestObjects.Message.Sound"/>.
            </summary>
            <param name="priority">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Priority"/>.</param>
            <param name="title">The <see cref="P:NPushover.RequestObjects.Message.Title"/> for the <see cref="T:NPushover.RequestObjects.Message"/>.</param>
            <param name="body">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Body"/>.</param>
            <param name="isHtmlBody">When the <see cref="P:NPushover.RequestObjects.Message.Body"/> contains HTML, set to true. False otherwise. See <see cref="P:NPushover.RequestObjects.Message.IsHtmlBody"/>.</param>
            <param name="sound">The <see cref="P:NPushover.RequestObjects.Message.Sound"/> of the <see cref="T:NPushover.RequestObjects.Message"/>.</param>
        </member>
        <member name="P:NPushover.RequestObjects.Message.Priority">
            <summary>
            Gets/sets the <see cref="P:NPushover.RequestObjects.Message.Priority"/> of the <see cref="T:NPushover.RequestObjects.Message"/>.
            </summary>
            <remarks>
            When you send a <see cref="T:NPushover.RequestObjects.Message"/> with priority <see cref="F:NPushover.RequestObjects.Priority.Emergency"/>, 
            Pushover will respond with a <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> containing a
            <see cref="P:NPushover.ResponseObjects.PushoverResponse.Receipt"/> that can be used to get information
            about whether the <see cref="T:NPushover.RequestObjects.Message"/> has been acknowledged.
            </remarks>
            <seealso cref="M:NPushover.Pushover.AcknowledgeMessageAsync(System.String,System.String)"/>
            <seealso cref="M:NPushover.Pushover.GetReceiptAsync(System.String)"/>
        </member>
        <member name="P:NPushover.RequestObjects.Message.Title">
            <summary>
            Gets/sets the (optional) title of the <see cref="T:NPushover.RequestObjects.Message"/>.
            </summary>
        </member>
        <member name="P:NPushover.RequestObjects.Message.Body">
            <summary>
            Gets/sets the body of the <see cref="T:NPushover.RequestObjects.Message"/>; may contain some HTML. See <see cref="P:NPushover.RequestObjects.Message.IsHtmlBody"/>.
            </summary>
            <seealso href="https://pushover.net/api#html">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.RequestObjects.Message.SupplementaryUrl">
            <summary>
            Gets/sets the <see cref="T:NPushover.RequestObjects.SupplementaryURL"/> of the <see cref="T:NPushover.RequestObjects.Message"/>.
            </summary>
            <seealso href="https://pushover.net/api#urls">Pushover API documentation</seealso>
            <seealso cref="T:NPushover.RequestObjects.SupplementaryURL"/>
        </member>
        <member name="P:NPushover.RequestObjects.Message.Timestamp">
            <summary>
            Gets/set the time of the <see cref="T:NPushover.RequestObjects.Message"/>.
            </summary>
            <remarks>Make sure Timestamp is specified in UTC; if not it will be assumed local and converted to UTC.</remarks>
            <seealso href="https://pushover.net/api#timestamp">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.RequestObjects.Message.Sound">
            <summary>
            Gets/sets the notification sound for the <see cref="T:NPushover.RequestObjects.Message"/>.
            </summary>
            <remarks>A list of available sounds can be retrieved with <see cref="M:NPushover.Pushover.ListSoundsAsync"/>.</remarks>
            <seealso cref="T:NPushover.RequestObjects.Sounds"/>
            <seealso cref="M:NPushover.Pushover.ListSoundsAsync"/>
            <seealso href="https://pushover.net/api#sounds">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.RequestObjects.Message.IsHtmlBody">
            <summary>
            Get/sets whether the <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Body"/> is to be interpreted as HTML.
            </summary>
            <seealso href="https://pushover.net/api#html">Pushover API documentation</seealso>
            <remarks>
            HTML tags currently supported by Pushover:
            <ul>
                <li>&lt;b&gt;word&lt;/b&gt; - display word in bold</li>
                <li>&lt;i&gt;word&lt;/i&gt; - display word in italics</li>
                <li>&lt;u&gt;word&lt;/u&gt; - display word underlined</li>
                <li>&lt;font color="blue"&gt;word&lt;/font&gt; - display word in blue text (most colors and hex codes permitted)</li>
                <li>&lt;a href="http://example.com/"&gt;word&lt;/a&gt; - display word as a tappable link to http://example.com/</li>
            </ul>
            </remarks>
        </member>
        <member name="P:NPushover.RequestObjects.Message.RetryOptions">
            <summary>
            Gets/set the <see cref="P:NPushover.RequestObjects.Message.RetryOptions"/> for the <see cref="T:NPushover.RequestObjects.Message"/>.
            </summary>
            <seealso href="https://pushover.net/api#priority">Pushover API documentation</seealso>
        </member>
        <member name="M:NPushover.RequestObjects.Message.Create(NPushover.RequestObjects.Sounds)">
            <summary>
            Creates a <see cref="T:NPushover.RequestObjects.Message"/> with the specified <see cref="P:NPushover.RequestObjects.Message.Sound"/> and default <see cref="P:NPushover.RequestObjects.Message.Priority"/> (Normal).
            </summary>
            <param name="sound">The <see cref="P:NPushover.RequestObjects.Message.Sound"/> of the <see cref="T:NPushover.RequestObjects.Message"/>.</param>
            <returns>A <see cref="T:NPushover.RequestObjects.Message"/> with the specified <see cref="P:NPushover.RequestObjects.Message.Sound"/>.</returns>
        </member>
        <member name="M:NPushover.RequestObjects.Message.Create(System.String)">
            <summary>
            Creates a <see cref="T:NPushover.RequestObjects.Message"/> with the specified <see cref="P:NPushover.RequestObjects.Message.Body"/> and default <see cref="P:NPushover.RequestObjects.Message.Priority"/> (Normal) and sound.
            </summary>
            <param name="body">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Body"/>.</param>
            <returns>A <see cref="T:NPushover.RequestObjects.Message"/> with the specified <see cref="P:NPushover.RequestObjects.Message.Body"/> and default <see cref="P:NPushover.RequestObjects.Message.Priority"/> (Normal) and sound.</returns>
        </member>
        <member name="M:NPushover.RequestObjects.Message.Create(NPushover.RequestObjects.Priority,System.String)">
            <summary>
            Creates a <see cref="T:NPushover.RequestObjects.Message"/> with the specified <see cref="P:NPushover.RequestObjects.Message.Priority"/> and <see cref="P:NPushover.RequestObjects.Message.Body"/> and default sound.
            </summary>
            <param name="priority">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Priority"/>.</param>
            <param name="body">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Body"/>.</param>
            <returns>A <see cref="T:NPushover.RequestObjects.Message"/> with the specified <see cref="P:NPushover.RequestObjects.Message.Priority"/> and <see cref="P:NPushover.RequestObjects.Message.Body"/> and default sound.</returns>
        </member>
        <member name="M:NPushover.RequestObjects.Message.Create(NPushover.RequestObjects.Priority,System.String,NPushover.RequestObjects.Sounds)">
            <summary>
            Creates a <see cref="T:NPushover.RequestObjects.Message"/> with the specified <see cref="P:NPushover.RequestObjects.Message.Priority"/>, <see cref="P:NPushover.RequestObjects.Message.Body"/> and <see cref="P:NPushover.RequestObjects.Message.Sound"/>.
            </summary>
            <param name="priority">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Priority"/>.</param>
            <param name="body">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Body"/>.</param>
            <param name="sound">The <see cref="P:NPushover.RequestObjects.Message.Sound"/> of the <see cref="T:NPushover.RequestObjects.Message"/>.</param>
            <returns>A <see cref="T:NPushover.RequestObjects.Message"/> with the specified <see cref="P:NPushover.RequestObjects.Message.Priority"/>, <see cref="P:NPushover.RequestObjects.Message.Body"/> and <see cref="P:NPushover.RequestObjects.Message.Sound"/>.</returns>
        </member>
        <member name="M:NPushover.RequestObjects.Message.Create(NPushover.RequestObjects.Priority,System.String,System.Boolean,NPushover.RequestObjects.Sounds)">
            <summary>
            Creates a <see cref="T:NPushover.RequestObjects.Message"/> with the specified <see cref="P:NPushover.RequestObjects.Message.Priority"/>, <see cref="P:NPushover.RequestObjects.Message.Body"/> and <see cref="P:NPushover.RequestObjects.Message.Sound"/>.
            </summary>
            <param name="priority">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Priority"/>.</param>
            <param name="body">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Body"/>.</param>
            <param name="isHtmlBody">When the <see cref="P:NPushover.RequestObjects.Message.Body"/> contains HTML, set to true. False otherwise. See <see cref="P:NPushover.RequestObjects.Message.IsHtmlBody"/>.</param>
            <param name="sound">The <see cref="P:NPushover.RequestObjects.Message.Sound"/> of the <see cref="T:NPushover.RequestObjects.Message"/>.</param>
            <returns>A <see cref="T:NPushover.RequestObjects.Message"/> with the specified <see cref="P:NPushover.RequestObjects.Message.Priority"/>, <see cref="P:NPushover.RequestObjects.Message.Body"/> and <see cref="P:NPushover.RequestObjects.Message.Sound"/>.</returns>
        </member>
        <member name="M:NPushover.RequestObjects.Message.Create(NPushover.RequestObjects.Priority,System.String,System.String,System.Boolean,NPushover.RequestObjects.Sounds)">
            <summary>
            Creates a <see cref="T:NPushover.RequestObjects.Message"/> with the specified <see cref="P:NPushover.RequestObjects.Message.Priority"/>, <see cref="P:NPushover.RequestObjects.Message.Title"/>, 
            <see cref="P:NPushover.RequestObjects.Message.Body"/> and <see cref="P:NPushover.RequestObjects.Message.Sound"/>.
            </summary>
            <param name="priority">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Priority"/>.</param>
            <param name="title">The <see cref="P:NPushover.RequestObjects.Message.Title"/> for the <see cref="T:NPushover.RequestObjects.Message"/>.</param>
            <param name="body">The <see cref="T:NPushover.RequestObjects.Message"/> <see cref="P:NPushover.RequestObjects.Message.Body"/>.</param>
            <param name="isHtmlBody">When the <see cref="P:NPushover.RequestObjects.Message.Body"/> contains HTML, set to true. False otherwise. See <see cref="P:NPushover.RequestObjects.Message.IsHtmlBody"/>.</param>
            <param name="sound">The <see cref="P:NPushover.RequestObjects.Message.Sound"/> of the <see cref="T:NPushover.RequestObjects.Message"/>.</param>
            <returns>
            A <see cref="T:NPushover.RequestObjects.Message"/> with the specified <see cref="P:NPushover.RequestObjects.Message.Priority"/>, <see cref="P:NPushover.RequestObjects.Message.Title"/>, <see cref="P:NPushover.RequestObjects.Message.Body"/> 
            and <see cref="P:NPushover.RequestObjects.Message.Sound"/>.
            </returns>
        </member>
        <member name="M:NPushover.RequestObjects.Message.SetSound(NPushover.RequestObjects.Sounds)">
            <summary>
            Sets the <see cref="P:NPushover.RequestObjects.Message.Sound"/> property to any of the available <see cref="T:NPushover.RequestObjects.Sounds"/> values.
            </summary>
            <param name="sound">The <see cref="T:NPushover.RequestObjects.Sounds"/> values to set this messages' <see cref="P:NPushover.RequestObjects.Message.Sound"/> property to.</param>
            <seealso cref="T:NPushover.RequestObjects.Sounds"/>
            <seealso href="https://pushover.net/api#sounds">Pushover API documentation</seealso>
        </member>
        <member name="T:NPushover.RequestObjects.RetryOptions">
            <summary>
            Represents options for retrying <see cref="T:NPushover.RequestObjects.Message"/> delivery.
            </summary>
            <remarks>
            These options can only be used/specified for <see cref="F:NPushover.RequestObjects.Priority.Emergency"/> messages.
            </remarks>
            <seealso cref="T:NPushover.Validators.DefaultMessageValidator"/>
            <seealso cref="F:NPushover.RequestObjects.Priority.Emergency"/>
        </member>
        <member name="P:NPushover.RequestObjects.RetryOptions.RetryEvery">
            <summary>
            Gets/sets how often the Pushover servers will send the same <see cref="T:NPushover.RequestObjects.Message"/> to the user. In a
            situation where  a user might be in a noisy environment or sleeping, retrying the notification (with sound
            and vibration) will help get his or her attention. The minimum value is 30 seconds between retries.
            </summary>
            <seealso cref="T:NPushover.Validators.DefaultMessageValidator"/>
        </member>
        <member name="P:NPushover.RequestObjects.RetryOptions.RetryPeriod">
            <summary>
            Gets/set how long the notification will continue to be retried with the <see cref="P:NPushover.RequestObjects.RetryOptions.RetryEvery">specified 
            interval</see>. If the notification has not been acknowledged in this time, it will be marked as expired 
            and will stop being sent to the user. Note that the notification is still shown to the user after it is 
            expired, but it will not prompt the user for acknowledgement. This maximum value allowed is 24 hours.
            </summary>
            <seealso cref="T:NPushover.Validators.DefaultMessageValidator"/>
        </member>
        <member name="P:NPushover.RequestObjects.RetryOptions.CallBackUrl">
            <summary>
            Gets/sets the (optional) callback parameter may be supplied with a publicly-accessible URL that the Pushover
            servers will send a request to when the user has acknowledged the message.
            </summary>
        </member>
        <member name="T:NPushover.RequestObjects.SupplementaryURL">
            <summary>
            Represents a supplementary (to a <see cref="T:NPushover.RequestObjects.Message"/>) URL.
            </summary>
            <remarks>
            <para>
                It may be desirable to include a supplementary URL that is not included in the <see cref="T:NPushover.RequestObjects.Message"/> 
                <see cref="P:NPushover.RequestObjects.Message.Body"/>, but available for the user to click on. This <see cref="T:NPushover.RequestObjects.SupplementaryURL"/> will 
                be passed directly to the device client, with a URL title of the supplied <see cref="P:NPushover.RequestObjects.SupplementaryURL.Title"/> (defaulting to 
                the <see cref="P:NPushover.RequestObjects.SupplementaryURL.Uri"/> itself if no title given).
            </para>
            <para>
                Supplementary URLs can be useful for presenting long URLs in a notification as well as interacting with 3rd
                party applications. For example, if a Pushover application were sending Twitter messages to a user, a 
                <see cref="T:NPushover.RequestObjects.SupplementaryURL"/> may be sent that includes the actual link to the message that would open in
                the user's browser (e.g., http://twitter.com/user/status/12345) or a URL that will perform some action in
                another application installed on the device (e.g., twitter://status?id=12345). The message displayed in the
                Pushover client would be the actual contents of the Twitter message (with any URLs originally contained in
                it automatically turned into links), but the supplementary link will be shown underneath it as an option
                available to the user when the message is highlighted.
            </para>
            <para>
                While there are some standard URL schemes like tel: and sms: that will be handled by iOS and Android the
                same way, others like the twitter:// scheme used above are highly specific to the platform and other
                applications installed on the device. A list of common URL schemes supported by applications on iOS can be
                found at handleopenurl.com, and a list handled natively by Android can be found on developer.android.com.
                Since Pushover users may be on different platforms and have different 3rd party applications installed, it
                is not recommended to use app-specific URL schemes as supplementary URLs in public plugins, websites, and
                apps.
            </para>
            <para>
                Due to limitations of the iOS push notification service, supplementary URLs are not able to be shown with
                push notifications. Notifications in the Notification Center will only show the title and message. The user
                must tap on the notification or otherwise open the Pushover client, which will perform a sync with the
                Pushover servers, in order to download the attached supplementary URL. Since these URLs are supplementary, 
                they should not be used as the primary content of your notification. If your notification is just a URL, 
                include it in the message body instead.
            </para>
            </remarks>
        </member>
        <member name="P:NPushover.RequestObjects.SupplementaryURL.Uri">
            <summary>
            Gets/sets the <see cref="P:NPushover.RequestObjects.SupplementaryURL.Uri"/> of the <see cref="T:NPushover.RequestObjects.SupplementaryURL"/>.
            </summary>
            <seealso cref="T:NPushover.RequestObjects.SupplementaryURL"/>
        </member>
        <member name="P:NPushover.RequestObjects.SupplementaryURL.Title">
            <summary>
            Gets/sets the title (or text) to be displayed for the URL.
            </summary>
            <seealso cref="T:NPushover.RequestObjects.SupplementaryURL"/>
        </member>
        <member name="T:NPushover.Pushover">
            <summary>
            Provides asynchronous methods to interact with the Pushover service.
            </summary>
        </member>
        <member name="F:NPushover.Pushover.DEFAULTBASEURI">
            <summary>
            The default <see cref="T:System.Uri"/> used by Pushover.
            </summary>
        </member>
        <member name="F:NPushover.Pushover.DEFAULTENCODING">
            <summary>
            The default <see cref="P:NPushover.Pushover.Encoding"/> used by Pushover.
            </summary>
        </member>
        <member name="P:NPushover.Pushover.Encoding">
            <summary>
            Gets the encoding used for exchanging messages with Pushover.
            </summary>
        </member>
        <member name="P:NPushover.Pushover.BaseUri">
            <summary>
            Gets the base URL used by Pushover.
            </summary>
        </member>
        <member name="P:NPushover.Pushover.ApplicationKey">
            <summary>
            Gets the application token used to identify to Pushover.
            </summary>
        </member>
        <member name="P:NPushover.Pushover.Proxy">
            <summary>
            Gets/sets the <see cref="T:System.Net.IWebProxy"/> server used by Pushover.
            </summary>
        </member>
        <member name="P:NPushover.Pushover.MessageValidator">
            <summary>
            Gets/sets the <see cref="T:NPushover.Validators.IValidator`1"/> used to validate messages before sending.
            </summary>
        </member>
        <member name="P:NPushover.Pushover.AppKeyValidator">
            <summary>
            Gets/sets the <see cref="T:NPushover.Validators.IValidator`1"/> used to validate the Application Key.
            </summary>
        </member>
        <member name="P:NPushover.Pushover.UserOrGroupKeyValidator">
            <summary>
            Gets/sets the <see cref="T:NPushover.Validators.IValidator`1"/> used to validate user or group keys.
            </summary>
        </member>
        <member name="P:NPushover.Pushover.DeviceNameValidator">
            <summary>
            Gets/sets the <see cref="T:NPushover.Validators.IValidator`1"/> used to validate devicenames.
            </summary>
        </member>
        <member name="P:NPushover.Pushover.ReceiptValidator">
            <summary>
            Gets/sets the <see cref="T:NPushover.Validators.IValidator`1"/> used to receipts.
            </summary>
        </member>
        <member name="P:NPushover.Pushover.EmailValidator">
            <summary>
            Gets/sets the <see cref="T:NPushover.Validators.IValidator`1"/> used to validate e-mail addresses.
            </summary>
        </member>
        <member name="M:NPushover.Pushover.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:NPushover.Pushover"/> with the specified applicationkey, the 
            <see cref="F:NPushover.Pushover.DEFAULTBASEURI"/> and <see cref="F:NPushover.Pushover.DEFAULTENCODING"/>.
            </summary>
            <param name="applicationKey">The application key (or token).</param>
            <seealso href="https://pushover.net/api">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when applicationKey is null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when an invalid applicationKey is specified.</exception>
        </member>
        <member name="M:NPushover.Pushover.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of <see cref="T:NPushover.Pushover"/> with the specified applicationkey and base URI and 
            <see cref="F:NPushover.Pushover.DEFAULTENCODING"/>.
            </summary>
            <param name="applicationKey">The application key (or token).</param>
            <param name="baseUri">The base <see cref="T:System.Uri"/> to use. Note that this does not include the API version (e.g. 1).</param>
            <seealso href="https://pushover.net/api">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when applicationKey or baseUri are null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when an invalid applicationKey is specified.</exception>
        </member>
        <member name="M:NPushover.Pushover.#ctor(System.String,System.Uri,System.Text.Encoding)">
            <summary>
            Initializes a new instance of <see cref="T:NPushover.Pushover"/> with the specified applicationkey, base URI and <see cref="P:NPushover.Pushover.Encoding"/>.
            </summary>
            <param name="applicationKey">The application key (or token).</param>
            <param name="baseUri">The base <see cref="T:System.Uri"/> to use. Note that this does not include the API version (e.g. 1).</param>
            <param name="encoding">The <see cref="P:NPushover.Pushover.Encoding"/> to use for exchaning data with Pushover.</param>
            <seealso href="https://pushover.net/api">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when applicationKey, baseUri or Encoding are null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when an invalid applicationKey is specified.</exception>
        </member>
        <member name="M:NPushover.Pushover.#ctor(System.String,System.Uri,System.Text.Encoding,NPushover.Validators.IValidator{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:NPushover.Pushover"/> with the specified applicationkey, base URI and <see cref="P:NPushover.Pushover.Encoding"/>.
            </summary>
            <param name="applicationKey">The application key (or token).</param>
            <param name="baseUri">The base <see cref="T:System.Uri"/> to use. Note that this does not include the API version (e.g. 1).</param>
            <param name="encoding">The <see cref="P:NPushover.Pushover.Encoding"/> to use for exchaning data with Pushover.</param>
            <param name="applicationKeyValidator">The <see cref="T:NPushover.Validators.IValidator`1"/> to use to validate the application key.</param>
            <seealso href="https://pushover.net/api">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when applicationKey, baseUri, Encoding or applicationKeyValidator are null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when an invalid applicationKey is specified.</exception>
        </member>
        <member name="M:NPushover.Pushover.SendMessageAsync(NPushover.RequestObjects.Message,System.String)">
            <summary>
            Sends, asynchronously, the specified <see cref="T:NPushover.RequestObjects.Message"/> using Pushover to the specified user or group.
            </summary>
            <param name="message">The <see cref="T:NPushover.RequestObjects.Message"/> to send.</param>
            <param name="userOrGroup">The user or group id to send the message to.</param>
            <returns>Returns the <see cref="T:NPushover.ResponseObjects.PushoverUserResponse"/> returned by the server.</returns>
            <seealso href="https://pushover.net/api#messages">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when message or user/group arguments are null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when an invalid user/group is specified.</exception>
        </member>
        <member name="M:NPushover.Pushover.SendMessageAsync(NPushover.RequestObjects.Message,System.String,System.String)">
            <summary>
            Sends, asynchronously, the specified <see cref="T:NPushover.RequestObjects.Message"/> using Pushover to the specified device of the
            specified user or group.
            </summary>
            <param name="message">The <see cref="T:NPushover.RequestObjects.Message"/> to send.</param>
            <param name="userOrGroup">The user or group id to send the message to.</param>
            <param name="deviceName">The devicename to send the message to.</param>
            <returns>Returns the <see cref="T:NPushover.ResponseObjects.PushoverUserResponse"/> returned by the server.</returns>
            <seealso href="https://pushover.net/api#messages">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when message or user/group arguments are null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when an invalid user/group is specified.</exception>
        </member>
        <member name="M:NPushover.Pushover.SendMessageAsync(NPushover.RequestObjects.Message,System.String,System.String[])">
            <summary>
            Sends, asynchronously, the specified <see cref="T:NPushover.RequestObjects.Message"/> using Pushover to the specified device(s) of the
            specified user or group.
            </summary>
            <param name="message">The <see cref="T:NPushover.RequestObjects.Message"/> to send.</param>
            <param name="userOrGroup">The user or group id to send the message to.</param>
            <param name="deviceNames">The devicenames to send the message to.</param>
            <returns>Returns the <see cref="T:NPushover.ResponseObjects.PushoverUserResponse"/> returned by the server.</returns>
            <seealso href="https://pushover.net/api#messages">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when message or user/group arguments are null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when an invalid user/group is specified.</exception>
        </member>
        <member name="M:NPushover.Pushover.ListSoundsAsync">
            <summary>
            Retrieves, asynchronously, a list of available sounds.
            </summary>
            <seealso href="https://pushover.net/api#sounds">Pushover API documentation</seealso>
            <returns>Returns a <see cref="T:NPushover.ResponseObjects.SoundsResponse"/>.</returns>
        </member>
        <member name="M:NPushover.Pushover.GetReceiptAsync(System.String)">
            <summary>
            Retrieves, asynchronously, information about a receipt.
            </summary>
            <param name="receipt">The receipt id to retrieve the information for.</param>
            <returns>Returns a <see cref="T:NPushover.ResponseObjects.ReceiptResponse"/>.</returns>
            <seealso href="https://pushover.net/api#receipt">Pushover API documentation</seealso>
            <seealso cref="P:NPushover.RequestObjects.Message.Priority"/>
            <seealso cref="T:NPushover.RequestObjects.Priority"/>
            <exception cref="T:System.ArgumentNullException">Thrown when receipt is null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when an invalid receipt id is specified.</exception>
        </member>
        <member name="M:NPushover.Pushover.CancelReceiptAsync(System.String)">
            <summary>
            Cancels, asynchronously, a receipt.
            </summary>
            <param name="receipt">The receipt id to cancel.</param>
            <returns>Returns a <see cref="T:NPushover.ResponseObjects.PushoverUserResponse"/>.</returns>
            <seealso href="https://pushover.net/api#receipt">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when receipt is null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when an invalid receipt id is specified.</exception>
        </member>
        <member name="M:NPushover.Pushover.ValidateUserOrGroupAsync(System.String)">
            <summary>
            Validates, asynchronously, a specified user or group with the Pushover service.
            </summary>
            <param name="userOrGroup">The user or group id to validate.</param>
            <returns>Returns a <see cref="T:NPushover.ResponseObjects.ValidateUserOrGroupResponse"/>.</returns>
            <remarks>
            Currently, this method throws when the user/group is not known by the Pushover service; this is likely to 
            change in the future.
            </remarks>
            <seealso href="https://pushover.net/api#verification">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when user/group id is null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when user/group id is invalid.</exception>
        </member>
        <member name="M:NPushover.Pushover.ValidateUserOrGroupAsync(System.String,System.String)">
            <summary>
            Validates, asynchronously, a specified device for a user or group with the Pushover service.
            </summary>
            <param name="userOrGroup">The user or group id to validate the device for.</param>
            <param name="deviceName">The devicename to validate.</param>
            <returns>Returns a <see cref="T:NPushover.ResponseObjects.ValidateUserOrGroupResponse"/>.</returns>
            <remarks>
            Currently, this method throws when the user/group and/or devicename is not known by the Pushover service;
            this is likely to change in the future.
            </remarks>
            <seealso href="https://pushover.net/api#verification">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when user/group id or the devicename is null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when user/group id or the devicename is invalid.</exception>
        </member>
        <member name="M:NPushover.Pushover.MigrateSubscriptionAsync(System.String,System.String)">
            <summary>
            Migrates, asynchronously, a specific subscription to a user/group.
            </summary>
            <param name="subscription">Subscription code to migrate.</param>
            <param name="user">User code to migrate the subscription to.</param>
            <returns>Returns a <see cref="T:NPushover.ResponseObjects.MigrateSubscriptionResponse"/>.</returns>
            <remarks>Applications that formerly collected Pushover user keys are encouraged to migrate to subscription keys.</remarks>
            <seealso href="https://pushover.net/api/subscriptions#migration">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when subscription or user is null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when user or devicename are invalid.</exception>
        </member>
        <member name="M:NPushover.Pushover.MigrateSubscriptionAsync(System.String,System.String,System.String)">
            <summary>
            Migrates, asynchronously, a specific subscription to a user/group and limits it to a specified device.
            </summary>
            <param name="subscription">Subscription code to migrate.</param>
            <param name="user">User code to migrate the subscription to.</param>
            <param name="device">The device name that the subscription should be limited to.</param>
            <returns>Returns a <see cref="T:NPushover.ResponseObjects.MigrateSubscriptionResponse"/>.</returns>
            <remarks>Applications that formerly collected Pushover user keys are encouraged to migrate to subscription keys.</remarks>
            <seealso href="https://pushover.net/api/subscriptions#migration">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when subscription or user is null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when user or devicename are invalid.</exception>
        </member>
        <member name="M:NPushover.Pushover.MigrateSubscriptionAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Migrates, asynchronously, a specific subscription to a user/group and limits it to a specified device, setting the user's preferred default sound.
            </summary>
            <param name="subscription">Subscription code to migrate.</param>
            <param name="user">User code to migrate the subscription to.</param>
            <param name="device">The device name that the subscription should be limited to.</param>
            <param name="sound">The user's preferred default sound.</param>
            <returns>Returns a <see cref="T:NPushover.ResponseObjects.MigrateSubscriptionResponse"/>.</returns>
            <remarks>Applications that formerly collected Pushover user keys are encouraged to migrate to subscription keys.</remarks>
            <seealso href="https://pushover.net/api/subscriptions#migration">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when subscription or user is null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when user or devicename are invalid.</exception>
        </member>
        <member name="M:NPushover.Pushover.AssignLicenseAsync(System.String,System.String)">
            <summary>
            Assigns, asynchronously, a license to a specific user or e-mail address.
            </summary>
            <param name="user">The user id (required unless e-mail is specified).</param>
            <param name="email">The user's e-mail address (required unless user is specified).</param>
            <returns>Returns a <see cref="T:NPushover.ResponseObjects.AssignLicenseResponse"/>.</returns>
            <seealso href="https://pushover.net/api/licensing#assign">Pushover API documentation</seealso>
            <exception cref="T:System.InvalidOperationException">When user and email are both null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Invalid <see cref="T:NPushover.RequestObjects.OS"/> specified.</exception>
        </member>
        <member name="M:NPushover.Pushover.AssignLicenseAsync(System.String,System.String,NPushover.RequestObjects.OS)">
            <summary>
            Assigns, asynchronously, a license to a specific user or e-mail address and specified <see cref="T:NPushover.RequestObjects.OS"/>.
            </summary>
            <param name="user">The user id (required unless e-mail is specified).</param>
            <param name="email">The user's e-mail address (required unless user is specified).</param>
            <param name="os">The <see cref="T:NPushover.RequestObjects.OS"/> to assign the license to.</param>
            <returns>Returns a <see cref="T:NPushover.ResponseObjects.AssignLicenseResponse"/>.</returns>
            <seealso href="https://pushover.net/api/licensing#assign">Pushover API documentation</seealso>
            <exception cref="T:System.InvalidOperationException">When user and email are both null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Invalid <see cref="T:NPushover.RequestObjects.OS"/> specified.</exception>
        </member>
        <member name="M:NPushover.Pushover.LoginAsync(System.String,System.String)">
            <summary>
            Retrieves, asynchronously, the user's Pushover key and secret.
            </summary>
            <param name="email">The user's e-mail address.</param>
            <param name="password">The user's password.</param>
            <returns>Returns a <see cref="T:NPushover.ResponseObjects.LoginResponse"/>.</returns>
            <seealso href="https://pushover.net/api/client#login">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when e-mail or password is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when e-mail is invalid.</exception>
        </member>
        <member name="M:NPushover.Pushover.RegisterDeviceAsync(System.String,System.String)">
            <summary>
            Registers, asynchronously, a device.
            </summary>
            <param name="secret">The user's secret.</param>
            <param name="deviceName">The short name of the device.</param>
            <returns>Returns a <see cref="T:NPushover.ResponseObjects.RegisterDeviceResponse"/>.</returns>
            <seealso href="https://pushover.net/api/client#register">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when secret or devicename are null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when devicename is invalid.</exception>
        </member>
        <member name="M:NPushover.Pushover.ListMessagesAsync(System.String,System.String)">
            <summary>
            Retrieves, asynchronously, all existing messages waiting for the device.
            </summary>
            <param name="secret">The user's secret.</param>
            <param name="deviceId">Device id for which to download the messages.</param>
            <returns>Returns a <see cref="T:NPushover.ResponseObjects.ListMessagesResponse"/>.</returns>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when secret or device id is null.</exception>
        </member>
        <member name="M:NPushover.Pushover.DeleteMessagesAsync(System.String,System.String,System.Int32)">
            <summary>
            Deletes, asynchronously, all message up to, and including, the specified message id.
            </summary>
            <param name="secret">The user's secret.</param>
            <param name="deviceId">Device id for which to delete the messages.</param>
            <param name="upToAndIncludingMessageId">Message id of message up to, and including, to delete.</param>
            <returns>Returns a <see cref="T:NPushover.ResponseObjects.PushoverUserResponse"/>.</returns>
            <seealso href="https://pushover.net/api/client#delete">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when secret or device id is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when message id is invalid.</exception>
        </member>
        <member name="M:NPushover.Pushover.AcknowledgeMessageAsync(System.String,System.String)">
            <summary>
            Acknowledges, asynchronously, an emergency-priority message.
            </summary>
            <param name="secret">The user's secret.</param>
            <param name="receipt">The receipt of the message to acknowledge.</param>
            <returns>Returns a <see cref="T:NPushover.ResponseObjects.PushoverUserResponse"/>.</returns>
            <seealso href="https://pushover.net/api/client#p2">Pushover API documentation</seealso>
            <seealso cref="P:NPushover.RequestObjects.Message.Priority"/>
            <seealso cref="T:NPushover.RequestObjects.Priority"/>
            <exception cref="T:System.ArgumentNullException">Thrown when secret or receipt is null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when receipt is invalid.</exception>
        </member>
        <member name="M:NPushover.Pushover.DownloadIconAsync(System.String)">
            <summary>
            Downloads, asynchronously, a specified icon from the Pushover service.
            </summary>
            <param name="iconName">Name of the icon to download.</param>
            <returns>Returns a <see cref="T:System.IO.Stream"/>.</returns>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when iconname is null.</exception>
        </member>
        <member name="M:NPushover.Pushover.DownloadSoundAsync(System.String)">
            <summary>
            Downloads, asynchronously, a specified sound from the Pushover service in Mp3 format.
            </summary>
            <param name="soundName">Name of the sound to download.</param>
            <returns>Returns a <see cref="T:System.IO.Stream"/>.</returns>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when soundname is null.</exception>
        </member>
        <member name="M:NPushover.Pushover.DownloadSoundAsync(System.String,NPushover.RequestObjects.AudioFormat)">
            <summary>
            Downloads, asynchronously, a specified sound from the Pushover service in the specified format.
            </summary>
            <param name="soundName">Name of the sound to download.</param>
            <param name="audioFormat"><see cref="T:NPushover.RequestObjects.AudioFormat"/> to download.</param>
            <returns>Returns a <see cref="T:System.IO.Stream"/>.</returns>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">Thrown when soundname is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when audioFormat is invalid.</exception>
        </member>
        <member name="M:NPushover.Pushover.DownloadFileAsync(System.Uri)">
            <summary>
            Downloads, asynchronously, a specified file.
            </summary>
            <param name="uri"><see cref="T:System.Uri"/> of file to download.</param>
            <returns>Returns a <see cref="T:System.IO.Stream"/>.</returns>
        </member>
        <member name="M:NPushover.Pushover.GetUriFromBase(System.String,System.Object[])">
            <summary>
            Returns a relative <see cref="T:System.Uri"/> based on the <see cref="P:NPushover.Pushover.BaseUri"/>.
            </summary>
            <param name="relative">Relative path from the <see cref="P:NPushover.Pushover.BaseUri"/>.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>Returns a relative <see cref="T:System.Uri"/> based on the <see cref="P:NPushover.Pushover.BaseUri"/>.</returns>
        </member>
        <member name="M:NPushover.Pushover.GetV1APIUriFromBase(System.String,System.Object[])">
            <summary>
            Returns the V1 api <see cref="T:System.Uri"/> based on the <see cref="P:NPushover.Pushover.BaseUri"/>.
            </summary>
            <param name="relative">Relative path from the V1 API <see cref="T:System.Uri"/>.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>Returns the V1 api <see cref="T:System.Uri"/> based on the <see cref="P:NPushover.Pushover.BaseUri"/>.</returns>
        </member>
        <member name="M:NPushover.Pushover.GetIconUriFromBase(System.String,System.Object[])">
            <summary>
            Returns an icon <see cref="T:System.Uri"/> based on the <see cref="P:NPushover.Pushover.BaseUri"/>.
            </summary>
            <param name="relative">Relative path for the icon.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>Returns an icon <see cref="T:System.Uri"/> based on the <see cref="P:NPushover.Pushover.BaseUri"/>.</returns>
        </member>
        <member name="M:NPushover.Pushover.GetSoundsUriFromBase(System.String,System.Object[])">
            <summary>
            Returns a sound <see cref="T:System.Uri"/> based on the <see cref="P:NPushover.Pushover.BaseUri"/>.
            </summary>
            <param name="relative">Relative path for the sound.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>Returns a sound <see cref="T:System.Uri"/> based on the <see cref="P:NPushover.Pushover.BaseUri"/>.</returns>
        </member>
        <member name="M:NPushover.Pushover.FormatUri(System.String,System.Object[])">
            <summary>
            Acts like a regular string.Format. However, it escapes each argument for use in a <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The composite (partial) uri(format); e.g. /foo/{0}/bar?baz={1}.</param>
            <param name="args">An array that contains zero or more objects to format.</param>
            <returns>Returns the escaped <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:NPushover.Pushover.Post``1(System.Uri,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Executes a POST to the given <see cref="T:System.Uri"/> passing the specified parameters.
            </summary>
            <typeparam name="T">The type of response to expext.</typeparam>
            <param name="uri">The <see cref="T:System.Uri"/> to post to.</param>
            <param name="parameters">The values to post.</param>
            <returns>Returns the parsed response.</returns>
        </member>
        <member name="M:NPushover.Pushover.Get``1(System.Uri)">
            <summary>
            Executes a GET to the given <see cref="T:System.Uri"/>.
            </summary>
            <typeparam name="T">The type of response to expext.</typeparam>
            <param name="uri">The <see cref="T:System.Uri"/> to GET.</param>
            <returns>Returns the parsed response.</returns>
        </member>
        <member name="M:NPushover.Pushover.ExecuteWebRequest``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Executes a specified function asynchronously assuming it returns a <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> and
            handles any web exceptions and other problems as best as possible (or re-throws).
            </summary>
        </member>
        <member name="M:NPushover.Pushover.ParseErrorResponse(System.Net.HttpWebResponse)">
            <summary>
            When Pushover returns an error it is returned in a (sort of...) structured format; this method tries to
            parse the result and extract possible information from it.
            </summary>
        </member>
        <member name="M:NPushover.Pushover.ParseRateLimitInfo(System.Net.WebHeaderCollection)">
            <summary>
            Parses, possible, rate-limiting information from a Pushover response if any.
            </summary>
        </member>
        <member name="M:NPushover.Pushover.ParseResponse``1(System.String,System.Net.WebHeaderCollection)">
            <summary>
            Parses a Pushover JSON response asynchronously.
            </summary>
        </member>
        <member name="M:NPushover.Pushover.GetWebClient">
            <summary>
            Creates and returns a <see cref="T:System.Net.WebClient"/> to be used when communicating with Pushover's service.
            </summary>
        </member>
        <member name="T:NPushover.ResponseObjects.AssignLicenseResponse">
            <summary>
            Represents a response for a <see cref="M:NPushover.Pushover.AssignLicenseAsync(System.String,System.String)"/> call.
            </summary>
            <seealso href="https://pushover.net/api/licensing#assign">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.AssignLicenseResponse.Credits">
            <summary>
            Gets the number of credits available for the application.
            </summary>
            <seealso href="https://pushover.net/api/licensing#assign">Pushover API documentation</seealso>
        </member>
        <member name="T:NPushover.ResponseObjects.ListMessagesResponse">
            <summary>
            Represents a response for a <see cref="M:NPushover.Pushover.ListMessagesAsync(System.String,System.String)"/> call.
            </summary>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.ListMessagesResponse.Messages">
            <summary>
            Gets the messages retrieved from the Pushover services.
            </summary>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.ListMessagesResponse.User">
            <summary>
            Gets information about the current user; see <see cref="T:NPushover.ResponseObjects.ListMessagesUser"/>.
            </summary>
            <remarks>
            This is an undocumented property.
            </remarks>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="T:NPushover.ResponseObjects.ListMessagesUser">
            <summary>
            Represents information about a user which is part of the response from a <see cref="T:NPushover.ResponseObjects.ListMessagesResponse"/> from
            a <see cref="M:NPushover.Pushover.ListMessagesAsync(System.String,System.String)"/> call.
            </summary>
            <remarks>
            This part of the response is undocumented by Pushover.
            </remarks>
        </member>
        <member name="P:NPushover.ResponseObjects.ListMessagesUser.QuietHours">
            <summary>
            Indicates if the user is, currently(?), in quiet hours.
            </summary>
        </member>
        <member name="P:NPushover.ResponseObjects.ListMessagesUser.IsAndroidLicensed">
            <summary>
            Indicates if the user has a license for Android devices.
            </summary>
        </member>
        <member name="P:NPushover.ResponseObjects.ListMessagesUser.IsIosLicensed">
            <summary>
            Indicates if the user has a license for iOS devices.
            </summary>
        </member>
        <member name="P:NPushover.ResponseObjects.ListMessagesUser.IsDesktopLicensed">
            <summary>
            Indicates if the user has a license for desktop application.
            </summary>
        </member>
        <member name="T:NPushover.ResponseObjects.LoginResponse">
            <summary>
            Represents a response for a <see cref="M:NPushover.Pushover.LoginAsync(System.String,System.String)"/> call.
            </summary>
            <seealso href="https://pushover.net/api/client#login">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.LoginResponse.Id">
            <summary>
            Gets the user key.
            </summary>
            <seealso href="https://pushover.net/api/client#login">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.LoginResponse.Secret">
            <summary>
            Gets the user's secret.
            </summary>
            <seealso href="https://pushover.net/api/client#login">Pushover API documentation</seealso>
        </member>
        <member name="T:NPushover.ResponseObjects.MigrateSubscriptionResponse">
            <summary>
            Represents a response for a <see cref="O:NPushover.Pushover.MigrateSubscriptionAsync"/> call.
            </summary>
            <remarks>
            Applications that formerly collected Pushover user keys are encouraged to migrate to subscription keys.
            </remarks>
            <seealso href="https://pushover.net/api/subscriptions#migration">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.MigrateSubscriptionResponse.SubscribedUserKey">
            <summary>
            Gets the key to save in place of the user's original key (of wich the latter can be discarded).
            </summary>
            <seealso cref="O:NPushover.Pushover.MigrateSubscriptionAsync"/>
            <seealso href="https://pushover.net/api/subscriptions#migration">Pushover API documentation</seealso>
        </member>
        <member name="T:NPushover.ResponseObjects.RateLimitInfo">
            <summary>
            Represents rate limiting info returned by the Pushover services (if any).
            </summary>
            <seealso cref="T:NPushover.Exceptions.RateLimitExceededException"/>
            <seealso href="https://pushover.net/api#limits">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.RateLimitInfo.Limit">
            <summary>
            Gets the monthly message limit (plus any additional purchased capacity).
            </summary>
            <seealso href="https://pushover.net/api#limits">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.RateLimitInfo.Remaining">
            <summary>
            Gets the remaining monthly message limit (plus any additional purchased capacity).
            </summary>
            <seealso href="https://pushover.net/api#limits">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.RateLimitInfo.Reset">
            <summary>
            Gets the date when the count for the rate limit will be rest.
            </summary>
            <seealso href="https://pushover.net/api#limits">Pushover API documentation</seealso>
        </member>
        <member name="M:NPushover.ResponseObjects.RateLimitInfo.#ctor(System.Int32,System.Int32,System.DateTime)">
            <summary>
            Initializes a new <see cref="T:NPushover.ResponseObjects.RateLimitInfo"/> object.
            </summary>
        </member>
        <member name="T:NPushover.ResponseObjects.ReceiptResponse">
            <summary>
            Represents a response for a <see cref="M:NPushover.Pushover.GetReceiptAsync(System.String)"/> call.
            </summary>
            <seealso href="https://pushover.net/api#receipt">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.ReceiptResponse.Acknowledged">
            <summary>
            Gets whether the user has acknowledged the notification.
            </summary>
            <seealso href="https://pushover.net/api#receipt">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.ReceiptResponse.AcknowledgedAt">
            <summary>
            Gets the date of when the user has acknowledged the notification, if any.
            </summary>
            <seealso href="https://pushover.net/api#receipt">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.ReceiptResponse.AcknowledgedBy">
            <summary>
            Gets the user key of the user that first acknowledged the notification.
            </summary>
            <seealso href="https://pushover.net/api#receipt">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.ReceiptResponse.LastDeliveredAt">
            <summary>
            Gets when the notification was last retried / delivered, if at all.
            </summary>
            <seealso href="https://pushover.net/api#receipt">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.ReceiptResponse.Expired">
            <summary>
            Gets whether the expiration date has passed.
            </summary>
            <seealso href="https://pushover.net/api#receipt">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.ReceiptResponse.ExpiresAt">
            <summary>
            Gets when the notification will stop being retried.
            </summary>
            <seealso href="https://pushover.net/api#receipt">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.ReceiptResponse.CalledBack">
            <summary>
            Gets whether the Pushover services have called back the callback URL (if any).
            </summary>
            <seealso href="https://pushover.net/api#receipt">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.ReceiptResponse.CalledBackAt">
            <summary>
            Gets when the Pushover services have called back the callback URL (if any, if at all).
            </summary>
            <seealso href="https://pushover.net/api#receipt">Pushover API documentation</seealso>
        </member>
        <member name="T:NPushover.ResponseObjects.RegisterDeviceResponse">
            <summary>
            Represents a response for a <see cref="M:NPushover.Pushover.RegisterDeviceAsync(System.String,System.String)"/> call.
            </summary>
            <seealso href="https://pushover.net/api/client#register">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.RegisterDeviceResponse.Id">
            <summary>
            Gets the device's unique id.
            </summary>
            <remarks>
            Store this value in a secure location.
            </remarks>
            <seealso href="https://pushover.net/api/client#register">Pushover API documentation</seealso>
        </member>
        <member name="T:NPushover.ResponseObjects.StoredMessage">
            <summary>
            Represents information about a <see cref="T:NPushover.ResponseObjects.ListMessagesResponse"/> message for a 
            <see cref="M:NPushover.Pushover.ListMessagesAsync(System.String,System.String)"/> call.
            </summary>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.StoredMessage.Id">
            <summary>
            Gets the unique id of the <see cref="T:NPushover.RequestObjects.Message"/>, relative to the device.
            </summary>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.StoredMessage.UMId">
            <summary>
            Gets the unique id of the <see cref="T:NPushover.RequestObjects.Message"/> relative to all devices on the same user's account.
            </summary>
            <remarks>
            When a <see cref="T:NPushover.RequestObjects.Message"/> is received by Pushover and sent to all devices on a user's account, each 
            <see cref="T:NPushover.RequestObjects.Message"/> is given the same <see cref="P:NPushover.ResponseObjects.StoredMessage.UMId"/> value. This is primarily used for cross-device
            notification dismissal sync.
            </remarks>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.StoredMessage.Title">
            <summary>
            Gets the title of the <see cref="T:NPushover.RequestObjects.Message"/>, if present. If not present, the name of the application (app)
            should be displayed.
            </summary>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.StoredMessage.Body">
            <summary>
            Gets the body of the <see cref="T:NPushover.RequestObjects.Message"/>.
            </summary>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.StoredMessage.Application">
            <summary>
            Gets the name of the application that sent the <see cref="T:NPushover.RequestObjects.Message"/>. This may not be unique.
            </summary>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.StoredMessage.ApplicationId">
            <summary>
            Gets the unique id of the application that sent the <see cref="T:NPushover.RequestObjects.Message"/>.
            </summary>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.StoredMessage.Icon">
            <summary>
            Gets the icon filename of the application that sent the <see cref="T:NPushover.RequestObjects.Message"/>.
            </summary>
            <remarks>
            The image data can be fetched using <see cref="M:NPushover.Pushover.DownloadIconAsync(System.String)"/>. When an
            application changes its icon, this value will change.
            </remarks>
            <seealso cref="M:NPushover.Pushover.DownloadIconAsync(System.String)"/>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.StoredMessage.Timestamp">
            <summary>
            Gets the date and time the <see cref="T:NPushover.RequestObjects.Message"/> was received by the Pushover services, unless the sender
            overrode the timestamp when sending it.
            </summary>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.StoredMessage.Priority">
            <summary>
            Gets the <see cref="P:NPushover.ResponseObjects.StoredMessage.Priority"/> of the <see cref="T:NPushover.RequestObjects.Message"/>.
            </summary>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.StoredMessage.Sound">
            <summary>
            Gets the <see cref="P:NPushover.ResponseObjects.StoredMessage.Sound"/>, if specified, from a <see cref="T:NPushover.RequestObjects.Message"/>.
            </summary>
            <remarks>
            This resource should be downloaded and cached.
            </remarks>
            <seealso cref="O:NPushover.Pushover.DownloadSoundAsync"/>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.StoredMessage.Url">
            <summary>
            Gets the <see cref="T:NPushover.RequestObjects.SupplementaryURL"/>'s url for the <see cref="T:NPushover.RequestObjects.Message"/>, if any.
            </summary>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.StoredMessage.UrlTitle">
            <summary>
            Gets the <see cref="T:NPushover.RequestObjects.SupplementaryURL"/>'s title for the <see cref="T:NPushover.RequestObjects.Message"/>, if any.
            </summary>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.StoredMessage.Acknowledged">
            <summary>
            Gets whether the <see cref="T:NPushover.RequestObjects.Message"/> was acknowledged. Used for <see cref="F:NPushover.RequestObjects.Priority.Emergency"/> messages.
            </summary>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.StoredMessage.Receipt">
            <summary>
            Gets the <see cref="T:NPushover.RequestObjects.Message"/>'s receipt code, if any. Used for <see cref="F:NPushover.RequestObjects.Priority.Emergency"/> messages.
            </summary>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.StoredMessage.IsHtmlBody">
            <summary>
            Gets whether the <see cref="T:NPushover.RequestObjects.Message"/> contains HTML.
            </summary>
            <see cref="P:NPushover.RequestObjects.Message.IsHtmlBody"/>
            <seealso href="https://pushover.net/api/client#download">Pushover API documentation</seealso>
        </member>
        <member name="T:NPushover.ResponseObjects.ValidateUserOrGroupResponse">
            <summary>
            Represents a response for a <see cref="O:NPushover.Pushover.ValidateUserOrGroupAsync"/> call.
            </summary>
            <seealso href="https://pushover.net/api#verification">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.ValidateUserOrGroupResponse.Devices">
            <summary>
            Gets the names of the user's active devices.
            </summary>
            <seealso href="https://pushover.net/api#verification">Pushover API documentation</seealso>
        </member>
        <member name="T:NPushover.ResponseObjects.PushoverResponse">
            <summary>
            Provides a base class for responses received from calls to the Pushover services.
            </summary>
            <seealso href="https://pushover.net/api#response">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.PushoverResponse.Status">
            <summary>
            Gets the status of the response; a value of 0 indicates a problem, 1 indicates OK.
            </summary>
            <seealso href="https://pushover.net/api#response">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.PushoverResponse.Request">
            <summary>
            Gets the unique id for the request.
            </summary>
            <seealso href="https://pushover.net/api#response">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.PushoverResponse.Receipt">
            <summary>
            Gets a receipt code (if any). Null otherwise.
            </summary>
            <remarks>
            Only <see cref="T:NPushover.RequestObjects.Message"/>s that are sent with a 
            <see cref="T:NPushover.RequestObjects.Priority"/> <see cref="F:NPushover.RequestObjects.Priority.Emergency"/> a
            receipt code will be returned.
            </remarks>
            <seealso href="https://pushover.net/api#response">Pushover API documentation</seealso>
            <seealso href="https://pushover.net/api#receipt">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.PushoverResponse.Errors">
            <summary>
            Gets any errors returned by the Pushover services. Null otherwise.
            </summary>
            <seealso href="https://pushover.net/api#response">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.PushoverResponse.RateLimitInfo">
            <summary>
            Gets information about ratelimiting returned by the Pushover services, if any. Null otherwise.
            </summary>
            <remarks>
            Usually only a response to a <see cref="O:NPushover.Pushover.SendMessageAsync"/> contains this
            information.
            </remarks>
            <seealso href="https://pushover.net/api#response">Pushover API documentation</seealso>
            <seealso href="https://pushover.net/api#limits">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.PushoverResponse.HasErrors">
            <summary>
            Indicates if the <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> contains any errors.
            </summary>
        </member>
        <member name="P:NPushover.ResponseObjects.PushoverResponse.IsOkStatus">
            <summary>
            Indicates if the <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> has a <see cref="P:NPushover.ResponseObjects.PushoverResponse.Status"/> code that represents an OK result.
            </summary>
        </member>
        <member name="P:NPushover.ResponseObjects.PushoverResponse.IsOk">
            <summary>
            Indicates if the <see cref="T:NPushover.ResponseObjects.PushoverResponse"/> is OK: no <see cref="P:NPushover.ResponseObjects.PushoverResponse.Errors"/> and a <see cref="P:NPushover.ResponseObjects.PushoverResponse.Status"/>
            that represents an OK value.
            </summary>
        </member>
        <member name="T:NPushover.ResponseObjects.PushoverUserResponse">
            <summary>
            Represents a response from the Pushover services that may also contain user information.
            </summary>
            <seealso href="https://pushover.net/api#response">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.PushoverUserResponse.User">
            <summary>
            Gets the user information, if any. Null otherwise.
            </summary>
            <seealso href="https://pushover.net/api#response">Pushover API documentation</seealso>
        </member>
        <member name="T:NPushover.ResponseObjects.SoundsResponse">
            <summary>
            Represents a response for a <see cref="M:NPushover.Pushover.ListSoundsAsync"/> call.
            </summary>
            <seealso href="https://pushover.net/api#sounds">Pushover API documentation</seealso>
        </member>
        <member name="P:NPushover.ResponseObjects.SoundsResponse.Sounds">
            <summary>
            Gets available sounds from the Pushover services (name / description).
            </summary>
            <seealso href="https://pushover.net/api#sounds">Pushover API documentation</seealso>
        </member>
        <member name="T:NPushover.Validators.EMailValidator">
            <summary>
            Provides VERY simple e-mail address validation (all that's required to validate is the string to contain an
            '@', the rest is up to Pushover's servers).
            </summary>
        </member>
        <member name="M:NPushover.Validators.EMailValidator.Validate(System.String,System.String)">
            <summary>
            Validates an e-mail address and throws whenever the e-mail address is deemed invalid.
            </summary>
            <param name="paramName">The name of the parameter being verified.</param>
            <param name="email">The e-mail address to validate.</param>
            <remarks>
            Provides VERY simple e-mail address validation (all that's required to validate is the string to contain an
            '@', the rest is up to Pushover's servers).
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when email is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when email is invalid.</exception>
        </member>
        <member name="T:NPushover.Validators.IValidator`1">
            <summary>
            Provides the base validator interface for NPushover validators.
            </summary>
            <typeparam name="T">The type the validator operates on.</typeparam>
        </member>
        <member name="M:NPushover.Validators.IValidator`1.Validate(System.String,`0)">
            <summary>
            Validates the given object and throws any exceptions when the object is not valid.
            </summary>
            <param name="paramName">The name of the parameter being validated.</param>
            <param name="obj">The object to validate.</param>
        </member>
        <member name="T:NPushover.Validators.DefaultMessageValidator">
            <summary>
            Validates <see cref="T:NPushover.RequestObjects.Message"/>s.
            </summary>
        </member>
        <member name="M:NPushover.Validators.DefaultMessageValidator.Validate(System.String,NPushover.RequestObjects.Message)">
            <summary>
            Validates the specified <see cref="T:NPushover.RequestObjects.Message"/> and throws whenever the <see cref="T:NPushover.RequestObjects.Message"/> is deemed invalid.
            </summary>
            <param name="paramName">The name of the parameter being validated.</param>
            <param name="message">The message to validate.</param>
            <seealso href="https://pushover.net/api">Pushover API documentation</seealso>
            <exception cref="T:System.ArgumentNullException">
            Thrown when message is null or any of the message's non-nullable properties is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when any of the message'properties contains an invalid (too long or otherwise invalid) value.
            </exception>
        </member>
        <member name="T:NPushover.Validators.RegexValidator">
            <summary>
            Provides a baseclass for validators based on a <see cref="T:System.Text.RegularExpressions.Regex">regular expression</see> to validate values.
            </summary>
        </member>
        <member name="P:NPushover.Validators.RegexValidator.ValidationRegex">
            <summary>
            Gets the Regex for the validator.
            </summary>
        </member>
        <member name="F:NPushover.Validators.RegexValidator.DefaultRegexOptions">
            <summary>
            Default options for most <see cref="T:System.Text.RegularExpressions.Regex"/> objects.
            </summary>
        </member>
        <member name="M:NPushover.Validators.RegexValidator.#ctor(System.Text.RegularExpressions.Regex)">
            <summary>
            Initializes a new validator with the specified <see cref="T:System.Text.RegularExpressions.Regex"/>.
            </summary>
            <param name="regex">The <see cref="T:System.Text.RegularExpressions.Regex"/> for the validator.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when regex is null.</exception>
        </member>
        <member name="M:NPushover.Validators.RegexValidator.Validate(System.String,System.String)">
            <summary>
            Executes the validator's regex and throws whenever the value doesn't match the validator's regex.
            </summary>
            <param name="paramName">The name of the parameter being validated.</param>
            <param name="value">The value to validate/match.</param>
            <remarks>
            This method uses the <see cref="T:System.Text.RegularExpressions.Regex"/>'s <see cref="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)"/> method.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when value is null.</exception>
            <exception cref="T:NPushover.Exceptions.InvalidKeyException">Thrown when value does not match the validator's <see cref="T:System.Text.RegularExpressions.Regex"/>.</exception>
        </member>
        <member name="T:NPushover.Validators.ApplicationKeyValidator">
            <summary>
            Validates application keys.
            </summary>
            <seealso href="https://pushover.net/api#registration">Pushover API documentation</seealso>
        </member>
        <member name="M:NPushover.Validators.ApplicationKeyValidator.#ctor">
            <summary>
            Initializes a new instance of an <see cref="T:NPushover.Validators.ApplicationKeyValidator"/>.
            </summary>
        </member>
        <member name="T:NPushover.Validators.UserOrGroupKeyValidator">
            <summary>
            Validates user and/or group id's.
            </summary>
            <seealso href="https://pushover.net/api#identifiers">Pushover API documentation</seealso>
        </member>
        <member name="M:NPushover.Validators.UserOrGroupKeyValidator.#ctor">
            <summary>
            Initializes a new instance of an <see cref="T:NPushover.Validators.UserOrGroupKeyValidator"/>.
            </summary>
        </member>
        <member name="T:NPushover.Validators.DeviceNameValidator">
            <summary>
            Validates devicenames.
            </summary>
            <seealso href="https://pushover.net/api#identifiers">Pushover API documentation</seealso>
        </member>
        <member name="M:NPushover.Validators.DeviceNameValidator.#ctor">
            <summary>
            Initializes a new instance of an <see cref="T:NPushover.Validators.DeviceNameValidator"/>.
            </summary>
        </member>
        <member name="T:NPushover.Validators.ReceiptValidator">
            <summary>
            Validates receipts.
            </summary>
            <seealso href="https://pushover.net/api#receipt">Pushover API documentation</seealso>
        </member>
        <member name="M:NPushover.Validators.ReceiptValidator.#ctor">
            <summary>
            Initializes a new instance of an <see cref="T:NPushover.Validators.ReceiptValidator"/>.
            </summary>
        </member>
    </members>
</doc>
